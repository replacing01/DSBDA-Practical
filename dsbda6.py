# -*- coding: utf-8 -*-
"""DSBDA6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17Y_X1ON3c0Z6jUdJ2ydFVKS1IhM1UDlI
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import warnings

warnings.filterwarnings('ignore')

df = sns.load_dataset('iris')

df.head()

df.shape

df.info()

df.isnull().sum()

df.describe()

"""Converting species column categorical values to numerical values"""

df['species'].value_counts()

df.replace(['setosa', 'versicolor', 'virginica'], [1, 2, 3], inplace = True)

df.dtypes['species']

"""EDA (Exploratory Data Analysis)"""

sns.boxplot(data = df)
plt.show()

# function for Outlier replacement

def Replace(col):
  Q1 = df[col].quantile(0.25)
  Q3 = df[col].quantile(0.75)
  IQR = Q3 - Q1
  upper = Q3 + (1.5*IQR)
  lower = Q1 - (1.5*IQR)
  np.clip(df[col], lower, upper, inplace=True)

Replace('sepal_width')

sns.boxplot(data=df)
plt.show()





sns.pairplot(data=df)











sns.kdeplot(data=df)

# Navie Bayes Classification Model
x = df.iloc[ : , :-1]
y = df.iloc[ : ,-1]

x

y

# Training and Testing x and y
from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.8, random_state=0)

x_train.shape

y_train.shape

x_test.shape

y_test.shape

# Implementing Naive Bayes Model

from sklearn.naive_bayes import GaussianNB

classify = GaussianNB()

# Training model
classify.fit(x_train, y_train)

y_pred = classify.predict(x_test)

y_pred.shape

# Evaluating the model
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score

confusion_matrix(y_test, y_pred)

accuracy_score(y_test, y_pred)

precision_score(y_test, y_pred, average=None)

recall_score(y_test, y_pred, average=None)